@model BlogMVC.Models.BlogPost
@using BlogMVC.Services.Interfaces
@using BlogMVC.Enums
@using Microsoft.AspNetCore.Identity
@inject IImageService ImageService
@inject IBlogPostService BlogPostService
@inject UserManager<BlogUser> UserManager

@{
}

<!-- Comment Partial View -->

<div class="axil-comment-area">
    <h4 class="title">@Model.Comments!.Count comments</h4>
    <ul class="comment-list">
        <!-- display each comment -->
        @foreach (Comment comment in Model.Comments.OrderByDescending(comment => comment.DateCreated))
        {
            <!-- Start Single Comment  -->
            <li class="comment">
                <div class="comment-body">
                    <div class="single-comment">
                        <div class="comment-img">
                            <img src="@ImageService.ConvertByteArrayToFile(comment.Author?.ImageData!, comment.Author?.ImageType!, (int)DefaultImage.BlogUserImage)" class="img-fluid authorCommentImg" alt="author picture">
                        </div>
                        <div class="comment-inner">
                            <h6 class="commenter">
                                <a class="hover-flip-item-wrapper" href="#">
                                    <span class="hover-flip-item">
                                        <span data-text="@comment.Author?.FullName">@comment.Author?.FullName</span>
                                    </span>
                                </a>
                            </h6>
                            <div class="comment-meta">
                                <div class="time-spent">@comment.DateCreated.ToString("MMM dd, yyyy hh:mm tt") <small><i>Date created</i></small>
                                                        <br>
                                                        @(comment.LastUpdated?.ToString("MMM dd, yyyy hh:mm tt") ?? "No Updated Date") <small><i>Last updated</i></small>
                                </div>
                                    <div class="reply-edit">
                                        <div class="reply">
                                                @* user has to be logged in to see edit button *@
                                                @if (User.Identity!.IsAuthenticated)
                                                {
                                                    @if (User.IsInRole("Administrator") || User.IsInRole("Moderator") || comment.AuthorId == UserManager.GetUserId(User)) 
                                                    {
                                                        <a class="comment-reply-link hover-flip-item-wrapper" asp-controller="Comments" asp-action="Edit" asp-route-id="@comment.Id">
                                                            <span class="hover-flip-item">
                                                                <span data-text="Edit">Edit</span>
                                                            </span>
                                                        </a>
                                                    }
                                                }
                                                @* user has to be an admin or mod to delete comment *@
                                                @if (User.IsInRole("Administrator") || User.IsInRole("Moderator")) 
                                                {
                                                    <a class="comment-reply-link hover-flip-item-wrapper" asp-controller="Comments" asp-action="Delete" asp-route-id="@comment.Id">
                                                        <span class="hover-flip-item">
                                                            <span data-text="Delete">Delete</span>
                                                        </span>
                                                    </a>
                                                }
                                        </div>
                                    </div>
                            </div>
                            <div class="comment-text">
                                <p class="b2">
                                    @Html.Raw(comment.Body)
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </li>
        } <!-- end comment -->
        <!-- End Single Comment  -->
    </ul>
</div>