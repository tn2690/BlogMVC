@model BlogMVC.Models.BlogPost
@using BlogMVC.Services.Interfaces
@using BlogMVC.Enums
@inject IImageService ImageService
@inject IBlogPostService BlogPostService

@{
    ViewData["Title"] = "Edit";
    var tags = (await BlogPostService.GetTagsAsync()).OrderBy(t => t.BlogPosts.Count);
}

<div class="container mt-5">
    <form asp-action="Edit" method="post" asp-controller="BlogPosts" enctype="multipart/form-data">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="Id" />
        <input type="hidden" asp-for="CreatorId" />
        <input type="hidden" asp-for="DateCreated" />
        <input type="hidden" asp-for="LastUpdated" />
        <input type="hidden" asp-for="ImageData" />
        <input type="hidden" asp-for="ImageType" />
        <input type="hidden" asp-for="Slug" />

        <h1>Edit a Blog Post</h1>
        <hr />

        <div class="row">
            <div class="col-12 col-lg-4">
                <div class="form-group">
                    <label asp-for="Title" class="control-label"></label>
                    <input asp-for="Title" class="form-control" />
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Abstract" class="control-label"></label>
                    <textarea asp-for="Abstract" class="form-control" rows="1"></textarea>
                    <span asp-validation-for="Abstract" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="CategoryId" class="control-label">Category</label>
                    <select asp-for="CategoryId" class="form-control" asp-items="ViewBag.CategoryId"></select>
                </div>
                <div class="form-group">
                    <label asp-for="BlogPostImage" class="control-label">Upload an Image for your Post</label>
                    <img id="blogPostImage" class="img-fluid border rounded-3 m-2" style="max-height: 250px;" src="@ImageService.ConvertByteArrayToFile(Model.ImageData!, Model.ImageType, (int)DefaultImage.BlogPostImage)" alt="blog post picture">
                    <input asp-for="BlogPostImage" type="file" class="form-control mt-3 pt-2" accept=".png,.jpg,.jpeg,.gif"
                           onchange="document.getElementById('blogPostImage').src=window.URL.createObjectURL(this.files[0])" />
                </div>
            </div>
            <div class="col-12 col-lg-8">
                <div class="form-group">
                    <label asp-for="Content" class="control-label"></label>
                    <textarea asp-for="Content" class="form-control editor"></textarea>
                    <span asp-validation-for="Content" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Tags"></label>
                    <input class="form-control" type="text" id="tagInput" name="StringTags" autocomplete="off" />
                    <div class="tagcloud axil-single-widget mt-2" style="display: none">
                        @foreach (Tag tag in tags)
                        {
                            <a onclick="addTag(this)">@tag.Name</a>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group d-flex justify-content-end mt-3">
            <div class="form-group form-check d-flex my-auto">
                <label class="form-check-label my-auto me-4">
                    <input class="form-check-input me-3" asp-for="IsPublished" />&nbsp; Publish?
                </label>
            </div>
            <input type="submit" value="Save changes" class="btn btn-primary" />
        </div>
    </form>
    <div class="mt-5">
        <a asp-action="Index">Back to List</a>
    </div>
</div>

@*<div class="post-single-wrapper axil-section-gap bg-color-white">
    <div class="container">
        <div class="row card shadow-lg">
            <div class="col-md-12">
                <h1>Edit a Blog Post</h1>
                <hr />
                <form asp-action="Edit" method="post" asp-controller="BlogPosts" enctype="multipart/form-data">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" asp-for="Id" />
                    <input type="hidden" asp-for="CreatorId" />
                    <input type="hidden" asp-for="DateCreated" />
                    <input type="hidden" asp-for="LastUpdated" />
                    <input type="hidden" asp-for="ImageData" />
                    <input type="hidden" asp-for="ImageType" />
                    <input type="hidden" asp-for="Slug" />

                    <div class="col-12 col-lg-6">
                        <div class="form-group">
                            <label asp-for="BlogPostImage" class="control-label">Upload an Image for your Post</label>
                            <img class="img-fluid" style="max-height: 250px" src="@ImageService.ConvertByteArrayToFile(Model.ImageData!, Model.ImageType,(int)DefaultImage.BlogPostImage)" />
                            <input asp-for="BlogPostImage" class="form-control" accept=".png,.jpg,.jpeg,.gif"
                                   onchange="document.getElementById('blogPostImage').src=window.URL.createObjectURL(this,files[0])" />
                        </div>
                    </div>

                    <div class="form-group">
                        <label asp-for="Title" class="control-label"></label>
                        <input asp-for="Title" class="form-control" />
                        <span asp-validation-for="Title" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Content" class="control-label"></label>
                        <textarea asp-for="Content" class="form-control editor"></textarea>
                        <span asp-validation-for="Content" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="CategoryId" class="control-label"></label>
                        <select asp-for="CategoryId" class="form-control" asp-items="ViewBag.CategoryId"></select>
                        <span asp-validation-for="CategoryId" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Tags" class="control-label"></label>
                                     value="@string.Join(", ", Model.Tags.Select(t => t.Name))
                        <select name="SelectedTags" class="form-control" asp-items="ViewBag.BlogPostTags" multiple></select>
                    </div>
                    <div class="form-group">
                        <label asp-for="Abstract" class="control-label"></label>
                        <input asp-for="Abstract" class="form-control" />
                        <span asp-validation-for="Abstract" class="text-danger"></span>
                    </div>
                    <div class="form-group form-check">
                        <input class="form-check-input" asp-for="IsDeleted" />
                        <label class="form-check-label" asp-for="IsDeleted"></label>
                        <span asp-validation-for="IsDeleted" class="text-danger"></span>
                    </div>
                    <div class="form-group form-check">
                        <input class="form-check-input" asp-for="IsPublished" />
                        <label class="form-check-label" asp-for="IsPublished"></label>
                        <span asp-validation-for="IsPublished" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Save" class="btn btn-primary rounded-pill my-2 btnLink" />
                    </div>

                    <div>
                        <a asp-action="Index">Back to List</a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>*@



@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        ClassicEditor
            .create(document.querySelector('.editor'))
            .catch(error => {
                console.error(error);
            });
    </script>

    <script>
        $(document).ready(function () {
            // override the jQuery ":contains" selector to make it case insensitive
            jQuery.expr[':'].contains = function (a, i, m) {
                return $(a).text().toUpperCase()
                    .indexOf(m[3].toUpperCase()) >= 0;
            };

            // show tagcloud on input focus
            $('#tagInput').focus(function () {
                $('.tagcloud').show(300);
            });

            // hides tagcloud
            $('form *:not("#tagInput")').focus(function () {
                if ($('.tagcloud').is(':visible')) {
                    $('.tagcloud').hide(300);
                }
            });

            // searches tag cloud
            $('#tagInput').keyup(function () {
                $('.disabledTag').each(function () {
                    $(this).removeClass('disabledTag');
                })
                let inputTags = $(this).val().split(',');
                let searchString = inputTags.pop().trim();

                $('.tagcloud > a:not( :contains(' + searchString + ') )').hide();
                $('.tagcloud > a:contains(' + searchString + ')').show();

                // hide the tags we already have
                inputTags.forEach(tag => {
                    if (tag.trim() == '') return;
                    let containingTag = $('.tagcloud > a:contains(' + tag.trim() + ')')
                    if (containingTag.text().trim().toLowerCase() == tag.trim().toLowerCase()) containingTag.addClass('disabledTag');
                });
            });
        });
        function addTag(elem) {
            let input = document.getElementById('tagInput');

            // do nothing if we've selected the tag already
            if (elem.classList.contains('disabledTag')) {
                input.focus();
                return;
            }

            // get the name of the tag
            let tagName = elem.textContent + ', ';

            // get array of currently entered tags
            let currentTags = input.value.split(',');

            // remove partially typed tag
            currentTags.pop();

            // add the full name of the new tag
            currentTags.push(tagName);

            input.value = currentTags.reduce((inputString, currentString) => inputString + ", " + currentString.trim());
            input.focus();

            // reset the tag cloud
            $('.tagcloud > a').show();

            elem.classList.add('disabledTag');
        }
    </script>
    }