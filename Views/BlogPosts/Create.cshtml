@model BlogMVC.Models.BlogPost
@using BlogMVC.Services.Interfaces
@using BlogMVC.Enums
@inject IImageService ImageService

@{
    ViewData["Title"] = "Create";
}

<div class="post-single-wrapper axil-section-gap bg-color-white">
    <div class="container">
        <div class="row card shadow-lg">
            <div class="col-md-12">
                <h1>Create a Blog Post</h1>
                <hr />
                @* Form goes here *@
                <form asp-action="Create" method="post" asp-controller="BlogPosts" enctype="multipart/form-data">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    <div class="col-12 col-lg-6">
                        <div class="form-group">
                            <label asp-for="BlogPostImage" class="control-label">Upload an Image</label>
                            <img id="blogPostImage" class="img-fluid" src="@ImageService.ConvertByteArrayToFile(Model.ImageData!, Model.ImageType, (int)DefaultImage.BlogPostImage)" alt="blog post picture" />
                            <input asp-for="BlogPostImage" class="form-control" accept=".png,.jpg,jpeg,.gif"
                               onchange="document.getElementById('blogPostImage').src=window.URL.createObjectURL(this.files[0])" />
                        </div>
                    </div>

                    <div class="form-group">
                        <label asp-for="Title" class="control-label"></label>
                        <input asp-for="Title" class="form-control" />
                        <span asp-validation-for="Title" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Content" class="control-label"></label>
                        <textarea asp-for="Content" class="form-control editor"></textarea>
                        <span asp-validation-for="Content" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="CategoryId" class="control-label">Category</label>
                        <select asp-for="CategoryId" class="form-control" asp-items="ViewBag.CategoryId"></select>
                    </div>
                    <div class="form-group">
                        <label asp-for="Tags" class="control-label"></label>
                        <select name="SelectedTags" class="form-control" asp-items="ViewBag.BlogPostTags" multiple></select>
                    </div>
                    <div class="form-group">
                        <label asp-for="Abstract" class="control-label"></label>
                        <input asp-for="Abstract" class="form-control" />
                        <span asp-validation-for="Abstract" class="text-danger"></span>
                    </div>
                    <div class="form-group form-check">
                        <input class="form-check-input" asp-for="IsDeleted" />
                        <label class="form-check-label" asp-for="IsDeleted"></label>
                        <span asp-validation-for="IsDeleted" class="text-danger"></span>
                    </div>
                    <div class="form-group form-check">
                        <input class="form-check-input" asp-for="IsPublished" />
                        <label class="form-check-label" asp-for="IsPublished"></label>
                        <span asp-validation-for="IsPublished" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Create" class="btn btn-primary rounded-pill my-2 btnLink" />
                    </div>
                </form>

                <div>
                    <a asp-action="Index">Back to List</a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    @*<script src="https://cdn.ckeditor.com/ckeditor5/35.0.1/super-build/ckeditor.js"></script>*@
    <script>
        CKEDITOR.ClassicEditor.create(document.getElementById("editor"), {
            toolbar: {
                items: [
                    'findAndReplace', 'selectAll', '|',
                    'heading', '|',
                    'bold', 'italic', 'strikethrough', 'underline', 'code', 'subscript', 'superscript', 'removeFormat', '|',
                    'bulletedList', 'numberedList', 'todoList', '|',
                    'outdent', 'indent', '|',
                    'undo', 'redo',
                    '-',
                    'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor', 'highlight', '|',
                    'alignment', '|',
                    'link', 'insertImage', 'blockQuote', 'insertTable', 'mediaEmbed', 'codeBlock', 'htmlEmbed', '|',
                    'specialCharacters', 'horizontalLine', 'pageBreak', '|',
                    'textPartLanguage', '|',
                    'sourceEditing'
                ],
                shouldNotGroupWhenFull: true
            },
            list: {
                properties: {
                    styles: true,
                    startIndex: true,
                    reversed: true
                }
            },
            heading: {
                options: [
                    { model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },
                    { model: 'heading1', view: 'h1', title: 'Heading 1', class: 'ck-heading_heading1' },
                    { model: 'heading2', view: 'h2', title: 'Heading 2', class: 'ck-heading_heading2' },
                    { model: 'heading3', view: 'h3', title: 'Heading 3', class: 'ck-heading_heading3' },
                    { model: 'heading4', view: 'h4', title: 'Heading 4', class: 'ck-heading_heading4' },
                    { model: 'heading5', view: 'h5', title: 'Heading 5', class: 'ck-heading_heading5' },
                    { model: 'heading6', view: 'h6', title: 'Heading 6', class: 'ck-heading_heading6' }
                ]
            },
            fontFamily: {
                options: [
                    'default',
                    'Arial, Helvetica, sans-serif',
                    'Courier New, Courier, monospace',
                    'Georgia, serif',
                    'Lucida Sans Unicode, Lucida Grande, sans-serif',
                    'Tahoma, Geneva, sans-serif',
                    'Times New Roman, Times, serif',
                    'Trebuchet MS, Helvetica, sans-serif',
                    'Verdana, Geneva, sans-serif'
                ],
                supportAllValues: true
            },
            fontSize: {
                options: [10, 12, 14, 'default', 18, 20, 22],
                supportAllValues: true
            },
            htmlSupport: {
                allow: [
                    {
                        name: /.*/,
                        attributes: true,
                        classes: true,
                        styles: true
                    }
                ]
            },
            htmlEmbed: {
                showPreviews: true
            },
            link: {
                decorators: {
                    addTargetToExternalLinks: true,
                    defaultProtocol: 'https://',

                }
            },
            removePlugins: [
                'CKBox',
                'CKFinder',
                'EasyImage',
                'RealTimeCollaborativeComments',
                'RealTimeCollaborativeTrackChanges',
                'RealTimeCollaborativeRevisionHistory',
                'PresenceList',
                'Comments',
                'TrackChanges',
                'TrackChangesData',
                'RevisionHistory',
                'Pagination',
                'WProofreader'
                // Careful, with the Mathtype plugin CKEditor will not load when loading this sample
                // from a local file system (file://) - load this site via HTTP server if you enable MathType
            ]
        });
    </script>

    }
